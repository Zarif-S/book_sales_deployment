name: Python Tests

on:
  workflow_dispatch: # Allows manual trigger
  push:
    branches: [ master, main ] # Include both common default branch names
  pull_request:
    branches: [ master, main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.10', '3.11'] # Test multiple Python versions if needed
      fail-fast: false # Don't cancel other jobs if one fails
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Use latest version
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install Poetry
      uses: snok/install-poetry@v1 # More reliable than pip install
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
        
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
        
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction
      
    - name: Verify installation
      run: |
        poetry run python --version
        poetry run pip list
        
    - name: Run linting (optional but recommended)
      run: |
        poetry run flake8 steps/ tests/ --max-line-length=100 --ignore=E203,W503 || true
        # Use || true to not fail the build on linting issues initially
        
    - name: Run unit tests
      run: |
        poetry run pytest tests/ \
          --maxfail=5 \
          --tb=short \
          --disable-warnings \
          -v \
          --cov=steps \
          --cov-report=xml \
          --cov-report=term-missing
          
    - name: Upload coverage to Codecov (optional)
      if: matrix.python-version == '3.10' # Only upload once
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false # Don't fail if codecov is down
        
    - name: Run performance tests separately (optional)
      run: |
        poetry run pytest tests/ -m "performance" -v --tb=short || true
        # Performance tests might be flaky in CI, so don't fail the build
        
    # Optional: Test your code can actually import without issues
    - name: Test import
      run: |
        poetry run python -c "
        import sys
        try:
            from steps._01_load_data import get_merged_data
            print('✅ Import successful')
        except ImportError as e:
            print(f'❌ Import failed: {e}')
            sys.exit(1)
        "